name: $(Version).$(rev:r)

variables:
- group: Common Netlify

trigger:
  branches:
    include:
    - release/netlify
  paths:
    include:
    - 'Netlify/*'
    exclude:
    - 'pipelines/*'
    - 'scripts/*'
    - '.editorconfig'
    - '.gitignore'
    - 'README.md'

stages:
# Build Pipeline
- stage: Build
  jobs:
  - job: HostedVs2017
    displayName: Hosted VS2017
    pool:
      name: Hosted VS2017
      demands: npm
    workspace:
      clean: all
    variables:
    - group: Common Marketplace
    - group: PROD Marketplace
    
    steps:
    - template: templates/npm-build-steps.yaml
      parameters:
        extensionName: $(ExtensionName)
    
    - task: ms-devlabs.vsts-developer-tools-build-tasks.tfx-installer-build-task.TfxInstaller@1
      displayName: 'Install tfx-cli'
      inputs:
        version: v0.7.x
        autoUpdate: true
    
    - task: ms-devlabs.vsts-developer-tools-build-tasks.package-extension-build-task.PackageVSTSExtension@1
      displayName: 'Package Extension'
      inputs:
        rootFolder: '$(Build.SourcesDirectory)/$(ExtensionName)'
        patternManifest: '$(ManifestFileName)'
        outputPath: '$(Build.ArtifactStagingDirectory)'
        outputVariable: 'Extension.OutputPath'
        publisherId: '$(PublisherId)'
        extensionId: '$(ExtensionId)'
        extensionName: '$(ExtensionName)'
        extensionVersion: '$(Version)'
        updateTasksVersion: false
        updateTasksId: false
        extensionVisibility: private
        extensionPricing: free
    
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        pathToPublish: $(Build.ArtifactStagingDirectory)
        artifactName: drop
        publishLocation: 'Container'
# # Release Pipeline to DEV
# - stage: DEV
#   jobs:
#   - deployment: HostedVs2017
#     displayName: Hosted VS2017
#     pool:
#       name: Hosted VS2017
#     variables:
#     - group: Common Marketplace
#     - group: DEV Marketplace
#     environment: netlify-dev
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - template: templates/tfx-release-steps.yaml
#             parameters:
#               tfxVersion: "v0.7.x"
#               tfxAutoUpdate: true
#               publishConnectedServiceName: aliencube.marketplace.visualstudio.com
#               publishFileType: vsix
#               publishPublisherId: $(PublisherId)
#               publishProdPublisherId: $(PublisherId.Prod)
#               publishExtensionId: $(ExtensionId)
#               publishVersion: $(Version)
#               publishUpdateTasksVersion: false
#               publishUpdateTasksId: false
#               publishExtensionVisibility: $(Visibility)
#               publishExtensionPricing: $(Pricing)
#               publishOutputVariable: Extension.OutputPath
#               publishOrganisation: $(Organisation)
# # Release Pipeline to PROD
# - stage: PROD
#   jobs:
#   - deployment: HostedVs2017
#     displayName: Hosted VS2017
#     pool:
#       name: Hosted VS2017
#     variables:
#     - group: Common Marketplace
#     - group: PROD Marketplace
#     environment: netlify-prod
#     strategy:
#       runOnce:
#         deploy:
#           steps:
#           - template: templates/tfx-release-steps.yaml
#             parameters:
#               tfxVersion: "v0.7.x"
#               tfxAutoUpdate: true
#               publishConnectedServiceName: aliencube.marketplace.visualstudio.com
#               publishFileType: vsix
#               publishPublisherId: $(PublisherId)
#               publishProdPublisherId: $(PublisherId.Prod)
#               publishExtensionId: $(ExtensionId)
#               publishVersion: $(Version)
#               publishUpdateTasksVersion: false
#               publishUpdateTasksId: false
#               publishExtensionVisibility: $(Visibility)
#               publishExtensionPricing: $(Pricing)
#               publishOutputVariable: Extension.OutputPath
#               publishOrganisation: ""
