parameters:
  tfxVersion: "v0.7.x"
  tfxAutoUpdate: true
  publishConnectedServiceName: ""
  publishFileType: vsix
  publishPublisherId: aliencube
  publishProdPublisherId: aliencube
  publishExtensionId: netlify-cli-extensions
  publishVersion: "1.0.0"
  publishUpdateTasksVersion: false
  publishUpdateTasksId: false
  publishExtensionVisibility: private
  publishExtensionPricing: free
  publishOutputVariable: Extension.OutputPath
  publishOrganisation: aliencube-dev

steps:
- task: TfxInstaller@1
#- task: ms-devlabs.vsts-developer-tools-build-tasks.tfx-installer-build-task.TfxInstaller@1
  displayName: 'Install tfx-cli'
  inputs:
    version: ${{ parameters.tfxVersion }}
    autoUpdate: ${{ parameters.tfxAutoUpdate }}
- task: PublishExtension@1
#- task: ms-devlabs.vsts-developer-tools-build-tasks.publish-extension-build-task.PublishExtension@1
  displayName: 'Publish Extension'
  inputs:
    connectedServiceName: ${{ parameters.publishConnectedServiceName }}
    fileType: ${{ parameters.publishFileType }}
    vsixFile: '$(Pipeline.Workspace)/drop/${{ parameters.publishProdPublisherId }}.${{ parameters.publishExtensionId }}-${{ parameters.publishVersion }}.vsix'
    publisherId: ${{ parameters.publishPublisherId }}
    updateTasksVersion: ${{ parameters.publishUpdateTasksVersion }}
    updateTasksId: ${{ parameters.publishUpdateTasksId }}
    extensionVisibility: ${{ parameters.publishExtensionVisibility }}
    extensionPricing: ${{ parameters.publishExtensionPricing }}
    outputVariable: ${{ parameters.publishOutputVariable }}
    ${{ if eq(parameters.publishExtensionVisibility, 'private') }}:
      shareWith: ${{ parameters.publishOrganisation }}
